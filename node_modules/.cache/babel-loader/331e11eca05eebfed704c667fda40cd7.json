{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {}; //First Name Validation\n\n  if (!values.firstName.trim()) {\n    errors.firstName = 'First Name required';\n  } //Last Name Validation\n\n\n  if (!values.lastName.trim()) {\n    errors.lastName = 'Last Name required';\n  } //Phone number validation\n\n\n  if (!values.phone) {\n    errors.phone = 'Phone Number is requried';\n  } //Email Validation\n\n\n  if (!values.email) {\n    errors.email = 'Email requried';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  } // Confirm Email validaiton\n\n\n  if (!values.confirmemail) {\n    errors.confirmemail = 'Confirm Email is requried';\n  } else if (values.confirmemail !== values.email) {\n    errors.confirmemail = 'Emails do not match';\n  } //Password Validation\n\n\n  if (!values.password) {\n    errors.password = 'Password is requried';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password needs to be 8characters or more';\n  } //Confirm Password Validation\n\n\n  if (!values.confirmpassword) {\n    errors.confirmpassword = 'Confirm password is requried';\n  } else if (values.confirmpassword !== values.password) {\n    errors.confirmpassword = 'Passwords do not match';\n  } //Address Validation\n\n\n  if (!values.address) {\n    errors.address = 'Address is requried';\n  } //State Validation\n\n\n  if (!values.state) {\n    errors.state = 'State is required to choose';\n  } //Postcode Validation\n\n\n  if (!values.postcode) {\n    errors.postcode = 'Postcode is required to choose';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["/Users/fumi/Desktop/github/taskstech/src/components/Forms/validation.js"],"names":["validateInfo","values","errors","firstName","trim","lastName","phone","email","test","confirmemail","password","length","confirmpassword","address","state","postcode"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,MAAIC,MAAM,GAAG,EAAb,CADyC,CAGrC;;AACJ,MAAG,CAACD,MAAM,CAACE,SAAP,CAAiBC,IAAjB,EAAJ,EAA4B;AACxBF,IAAAA,MAAM,CAACC,SAAP,GAAmB,qBAAnB;AACH,GANwC,CAOrC;;;AACJ,MAAG,CAACF,MAAM,CAACI,QAAP,CAAgBD,IAAhB,EAAJ,EAA2B;AACvBF,IAAAA,MAAM,CAACG,QAAP,GAAkB,oBAAlB;AACH,GAVwC,CAYzC;;;AACA,MAAG,CAACJ,MAAM,CAACK,KAAX,EAAiB;AACbJ,IAAAA,MAAM,CAACI,KAAP,GAAe,0BAAf;AACH,GAfwC,CAiBzC;;;AACA,MAAG,CAACL,MAAM,CAACM,KAAX,EAAkB;AACdL,IAAAA,MAAM,CAACK,KAAP,GAAe,gBAAf;AACH,GAFD,MAEO,IAAI,CAAC,2CAA2CC,IAA3C,CAAgDP,MAAM,CAACM,KAAvD,CAAL,EACP;AACIL,IAAAA,MAAM,CAACK,KAAP,GAAe,0BAAf;AACH,GAvBwC,CAwBzC;;;AACA,MAAG,CAACN,MAAM,CAACQ,YAAX,EAAwB;AACpBP,IAAAA,MAAM,CAACO,YAAP,GAAsB,2BAAtB;AACH,GAFD,MAEO,IAAGR,MAAM,CAACQ,YAAP,KAAwBR,MAAM,CAACM,KAAlC,EAAwC;AAC3CL,IAAAA,MAAM,CAACO,YAAP,GAAsB,qBAAtB;AACH,GA7BwC,CA+BzC;;;AACA,MAAI,CAACR,MAAM,CAACS,QAAZ,EAAqB;AACjBR,IAAAA,MAAM,CAACQ,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAEO,IAAIT,MAAM,CAACS,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAA+B;AAClCT,IAAAA,MAAM,CAACQ,QAAP,GAAkB,0CAAlB;AACH,GApCwC,CAqCzC;;;AACA,MAAG,CAACT,MAAM,CAACW,eAAX,EAA2B;AACvBV,IAAAA,MAAM,CAACU,eAAP,GAAyB,8BAAzB;AACH,GAFD,MAEO,IAAIX,MAAM,CAACW,eAAP,KAA2BX,MAAM,CAACS,QAAtC,EAA+C;AAClDR,IAAAA,MAAM,CAACU,eAAP,GAAyB,wBAAzB;AACH,GA1CwC,CA2CzC;;;AACA,MAAG,CAACX,MAAM,CAACY,OAAX,EAAmB;AACfX,IAAAA,MAAM,CAACW,OAAP,GAAiB,qBAAjB;AACH,GA9CwC,CAgDzC;;;AACA,MAAG,CAACZ,MAAM,CAACa,KAAX,EAAiB;AACbZ,IAAAA,MAAM,CAACY,KAAP,GAAe,6BAAf;AACH,GAnDwC,CAqDzC;;;AACA,MAAG,CAACb,MAAM,CAACc,QAAX,EAAoB;AAChBb,IAAAA,MAAM,CAACa,QAAP,GAAkB,gCAAlB;AACH;;AAGD,SAAOb,MAAP;AACH","sourcesContent":["export default function validateInfo(values) {\n    let errors = {}\n\n        //First Name Validation\n    if(!values.firstName.trim()){\n        errors.firstName = 'First Name required';\n    }\n        //Last Name Validation\n    if(!values.lastName.trim()){\n        errors.lastName = 'Last Name required';\n    }\n\n    //Phone number validation\n    if(!values.phone){\n        errors.phone = 'Phone Number is requried'\n    }\n\n    //Email Validation\n    if(!values.email) {\n        errors.email = 'Email requried';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email))\n    {\n        errors.email = 'Email address is invalid';\n    }\n    // Confirm Email validaiton\n    if(!values.confirmemail){\n        errors.confirmemail = 'Confirm Email is requried'\n    } else if(values.confirmemail !== values.email){\n        errors.confirmemail = 'Emails do not match';\n    }\n\n    //Password Validation\n    if (!values.password){\n        errors.password = 'Password is requried';\n    } else if (values.password.length < 8){\n        errors.password = 'Password needs to be 8characters or more';\n    }\n    //Confirm Password Validation\n    if(!values.confirmpassword){\n        errors.confirmpassword = 'Confirm password is requried'\n    } else if (values.confirmpassword !== values.password){\n        errors.confirmpassword = 'Passwords do not match';\n    }\n    //Address Validation\n    if(!values.address){\n        errors.address = 'Address is requried'\n    }\n\n    //State Validation\n    if(!values.state){\n        errors.state = 'State is required to choose'\n    }\n\n    //Postcode Validation\n    if(!values.postcode){\n        errors.postcode = 'Postcode is required to choose'\n    }\n\n\n    return errors;\n}"]},"metadata":{},"sourceType":"module"}